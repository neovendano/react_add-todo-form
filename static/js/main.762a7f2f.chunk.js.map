{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","components/TodoAddForm/TodoAddForm.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","completed","title","classnames","TodoList","todos","map","TodoAddForm","users","onAdd","useState","setTitle","userId","setUserId","isTitleValid","setIsTitleValid","isUserIdValid","setIsUserIdValid","validatorABC","action","method","onSubmit","event","preventDefault","length","todoId","reduce","acc","Math","max","find","undefined","type","value","placeholder","onChange","target","replace","disabled","findUserById","usersFromServer","preparedTodoList","App","renderedTodos","setRenderedTodos","prevTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.762a7f2f.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport { User } from '../../types/User';\nimport './UserInfo.scss';\n\ninterface Props {\n  user: User | undefined,\n}\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user?.email}`}>\n      {user?.name}\n    </a>\n  );\n};\n","import React from 'react';\nimport classnames from 'classnames';\nimport { UserInfo } from '../UserInfo';\nimport { PreparedTodo } from '../../types/PreparedTodo';\nimport './TodoInfo.scss';\n\ninterface Props {\n  todo: PreparedTodo,\n}\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id, completed, title, user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classnames('TodoInfo', {\n        'TodoInfo--completed': completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      <UserInfo user={user} />\n    </article>\n  );\n};\n","import React from 'react';\nimport { PreparedTodo } from '../../types/PreparedTodo';\nimport { TodoInfo } from '../TodoInfo';\n\ninterface Props {\n  todos: PreparedTodo[],\n}\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n\n      {todos.map((todo) => (\n        <TodoInfo\n          todo={todo}\n          key={todo.id}\n          data-id={todo.id}\n        />\n      ))}\n\n    </section>\n  );\n};\n","import { useState } from 'react';\nimport { PreparedTodo } from '../../types/PreparedTodo';\nimport { User } from '../../types/User';\nimport './TodoAddForm.scss';\n\ninterface Props {\n  todos: PreparedTodo[],\n  users: User[],\n  onAdd: (todo: PreparedTodo) => void,\n}\n\nexport const TodoAddForm: React.FC<Props> = ({ todos, users, onAdd }) => {\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n\n  const [isTitleValid, setIsTitleValid] = useState(true);\n  const [isUserIdValid, setIsUserIdValid] = useState(true);\n\n  const validatorABC = /[^a-zA-Zа-яА-Я0-9\\s]/g;\n\n  const handleTitleInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value.replace(validatorABC, ''));\n    setIsTitleValid(true);\n  };\n\n  const handleUserIdInput = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setIsUserIdValid(true);\n  };\n\n  const reset = () => {\n    setTitle('');\n    setUserId(0);\n  };\n\n  const onSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (!(title.length)) {\n      setIsTitleValid(false);\n    }\n\n    if (!userId) {\n      setIsUserIdValid(false);\n    }\n\n    if (title.length && userId) {\n      const todoId = todos.reduce((acc, todo) => Math.max(acc, todo.id), 0);\n\n      onAdd({\n        id: todoId + 1,\n        title,\n        completed: false,\n        userId,\n        user: users\n          .find((user: User) => user.id === userId) ?? undefined,\n      });\n\n      reset();\n    }\n  };\n\n  return (\n    <form\n      action=\"/api/todos\"\n      method=\"POST\"\n      onSubmit={onSubmit}\n    >\n      <div className=\"field\">\n        <input\n          id=\"title\"\n          type=\"text\"\n          data-cy=\"titleInput\"\n          value={title}\n          placeholder=\"Enter a title\"\n          onChange={handleTitleInput}\n        />\n\n        {!isTitleValid && (\n          <span className=\"error\">Please enter a title</span>\n        )}\n      </div>\n\n      <div className=\"field\">\n        <select\n          id=\"userId\"\n          data-cy=\"userSelect\"\n          value={userId}\n          onChange={handleUserIdInput}\n        >\n          <option value=\"0\" disabled>Choose a user</option>\n          {users.map((user: User) => (\n            <option\n              value={user.id}\n              key={user.id}\n            >\n              {user.name}\n            </option>\n          ))}\n        </select>\n\n        {!isUserIdValid && (\n          <span className=\"error\">Please choose a user</span>\n        )}\n      </div>\n\n      <button type=\"submit\" data-cy=\"submitButton\">\n        Add\n      </button>\n    </form>\n  );\n};\n","import './App.scss';\n\nimport { useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { User } from './types/User';\nimport { PreparedTodo } from './types/PreparedTodo';\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\nimport { TodoAddForm } from './components/TodoAddForm';\n\nfunction findUserById(id: number): User | undefined {\n  return usersFromServer.find(user => user.id === id) ?? undefined;\n}\n\nconst preparedTodoList: PreparedTodo[] = todosFromServer\n  .map((todo: Todo) => {\n    return {\n      ...todo,\n      user: findUserById(todo.userId),\n    };\n  });\n\nexport const App = () => {\n  const [renderedTodos, setRenderedTodos] = useState(preparedTodoList);\n\n  const onAdd = (todo: PreparedTodo): void => {\n    setRenderedTodos((prevTodos) => [...prevTodos, todo]);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <TodoAddForm\n        todos={renderedTodos}\n        users={usersFromServer}\n        onAdd={onAdd}\n      />\n\n      <TodoList todos={renderedTodos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}